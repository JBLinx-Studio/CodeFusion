var l=Object.defineProperty;var d=(c,t,e)=>t in c?l(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var s=(c,t,e)=>d(c,typeof t!="symbol"?t+"":t,e);const r=class r{constructor(){s(this,"accessToken",null);s(this,"tokenExpiry",0)}static getInstance(){return r.instance||(r.instance=new r),r.instance}getConfig(){return{clientId:"Abrc68jTAU0GltdLz1FYYLMLaD5Y952gRrHtwrzeWI4-C8nlafFLdcH95KXpo3Fc6zYZsdIkiV7Jnl34",clientSecret:"",baseUrl:"https://api-m.paypal.com"}}async getAccessToken(){if(this.accessToken&&Date.now()<this.tokenExpiry)return this.accessToken;const t=this.getConfig(),e=btoa(`${t.clientId}:${t.clientSecret}`);try{const o=await fetch(`${t.baseUrl}/v1/oauth2/token`,{method:"POST",headers:{Authorization:`Basic ${e}`,"Content-Type":"application/x-www-form-urlencoded"},body:"grant_type=client_credentials"});if(!o.ok)throw new Error(`Auth failed: ${o.status}`);const n=await o.json();return this.accessToken=n.access_token,this.tokenExpiry=Date.now()+n.expires_in*1e3-6e4,this.accessToken}catch(o){throw console.error("PayPal auth error:",o),o}}async createProduct(){const t=this.getConfig(),e=await this.getAccessToken(),o={name:"CodeFusion Starter Plan",description:"Professional development tools for individual developers",type:"SERVICE",category:"SOFTWARE"};try{const n=await fetch(`${t.baseUrl}/v1/catalogs/products`,{method:"POST",headers:{Authorization:`Bearer ${e}`,"Content-Type":"application/json"},body:JSON.stringify(o)});if(!n.ok)throw new Error(`Product creation failed: ${n.status}`);return await n.json()}catch(n){throw console.error("Product creation error:",n),n}}async createSubscriptionPlan(t){const e=this.getConfig(),o=await this.getAccessToken(),n={product_id:t,name:"Starter Monthly Plan",description:"Monthly subscription for CodeFusion Starter plan",status:"ACTIVE",billing_cycles:[{frequency:{interval_unit:"MONTH",interval_count:1},tenure_type:"REGULAR",sequence:1,total_cycles:0,pricing_scheme:{fixed_price:{value:"5.00",currency_code:"USD"}}}],payment_preferences:{auto_bill_outstanding:!0,setup_fee:{value:"0.00",currency_code:"USD"},setup_fee_failure_action:"CONTINUE",payment_failure_threshold:3}};try{const a=await fetch(`${e.baseUrl}/v1/billing/plans`,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify(n)});if(!a.ok)throw new Error(`Plan creation failed: ${a.status}`);return await a.json()}catch(a){throw console.error("Plan creation error:",a),a}}async createSandboxPlan(){try{console.log("Creating sandbox product...");const t=await this.createProduct();console.log("Creating sandbox plan...");const e=await this.createSubscriptionPlan(t.id);return console.log("Sandbox plan created successfully:",{productId:t.id,planId:e.id}),{productId:t.id,planId:e.id}}catch(t){throw console.error("Sandbox plan creation failed:",t),t}}};s(r,"instance");let i=r;export{i as PayPalAPIService};
